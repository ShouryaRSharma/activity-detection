name: CI with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image for testing
      run: docker build --target test -t my-app:test .

    - name: Save Docker image as artifact
      run: |
        docker save my-app:test -o my-app-test.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app-test-image
        path: my-app-test.tar

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Docker image artifact
      uses: actions/download-artifact@v3
      with:
        name: my-app-test-image

    - name: Load Docker image
      run: docker load -i my-app-test.tar

    - name: Run tests
      uses: addnab/docker-run-action@v3
      with:
        image: my-app:test
        options: --entrypoint ""
        run: poetry run pytest --cov=. --cov-report=xml --cov-report=term --cov-report=html --junitxml=./test-reports/junit.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-reports
