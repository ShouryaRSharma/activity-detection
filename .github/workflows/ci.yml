name: CI with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image for testing
      run: docker build --target test -t ${{ secrets.DOCKER_USERNAME }}/my-app:test .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:test

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Pull Docker image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:test

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests
      uses: addnab/docker-run-action@v3
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/my-app:test
        options: --entrypoint ""
        run: poetry run pytest --cov=. --cov-report=xml --cov-report=term --cov-report=html --junitxml=./test-reports/junit.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-reports
